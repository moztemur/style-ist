name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # build-publish-library:
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: write   # Allow GitHub Actions to push changes (like updated package.json) 

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run Lint
  #       run: npm run lint

  #     - name: Run Tests
  #       run: npm test

  #     - name: Pull Latest Changes
  #       run: git pull origin master

  #     - name: Bump Version
  #       run: |
  #         npm version patch --no-git-tag-version

  #     - name: Get Version
  #       id: get_version
  #       run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

  #     - name: Commit bumped version and create git tag
  #       run: |
  #         git config --global user.name 'github-actions[bot]'
  #         git config --global user.email 'github-actions[bot]@users.noreply.github.com'
  #         git add package.json package-lock.json
  #         git commit -m "ci: bump version to v${{ steps.get_version.outputs.version }} [skip ci]"
  #         git tag "v${{ steps.get_version.outputs.version }}"
  #         git push origin master --tags

  #     - name: Build Package
  #       run: npm run build
      
  #     - name: Publish to NPM
  #       run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         tag_name: v${{ steps.get_version.outputs.version }}
  #         name: Release v${{ steps.get_version.outputs.version }}
  #         generate_release_notes: true

  build-demo:
  #  needs: build-publish-library
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: demo
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install and build library
        run: |
          cd ..
          npm ci
          cd demo
          npm ci

      - name: Build Demo
        run: npm run build

      - name: List files
        run: ls -la

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: demo/dist
  
  deploy-demo:
    needs: build-demo
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: demo

    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          path: demo/dist